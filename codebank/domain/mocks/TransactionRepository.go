// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/codeedu/codebank/domain"
	mock "github.com/stretchr/testify/mock"
)

// TransactionRepository is an autogenerated mock type for the TransactionRepository type
type TransactionRepository struct {
	mock.Mock
}

// CreateCreditCard provides a mock function with given fields: creditCard
func (_m *TransactionRepository) CreateCreditCard(creditCard domain.CreditCard) error {
	ret := _m.Called(creditCard)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.CreditCard) error); ok {
		r0 = rf(creditCard)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCreditCard provides a mock function with given fields: creditCard
func (_m *TransactionRepository) GetCreditCard(creditCard domain.CreditCard) (domain.CreditCard, error) {
	ret := _m.Called(creditCard)

	var r0 domain.CreditCard
	if rf, ok := ret.Get(0).(func(domain.CreditCard) domain.CreditCard); ok {
		r0 = rf(creditCard)
	} else {
		r0 = ret.Get(0).(domain.CreditCard)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.CreditCard) error); ok {
		r1 = rf(creditCard)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveTransaction provides a mock function with given fields: transaction, creditCard
func (_m *TransactionRepository) SaveTransaction(transaction domain.Transaction, creditCard domain.CreditCard) error {
	ret := _m.Called(transaction, creditCard)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Transaction, domain.CreditCard) error); ok {
		r0 = rf(transaction, creditCard)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
